import { get } from 'svelte/store';
import { urls } from '../stores/urlStore';
import * as api from 'api.js';

export function post(endpoint, data = {}) {
	return fetch(endpoint, {
		method: 'POST',
		credentials: 'include',
		body: JSON.stringify(data),
		headers: {
			'Content-Type': 'application/json',
		}
	}).then(r => r.json());
}
export function del(endpoint, id) {
	return fetch(endpoint, {
		method: 'DELETE',
		credentials: 'include',
		body: id,
		headers: {
			'Content-Type': 'application/json',
		}
	}).then(r => r.json());
}
export function put(endpoint, data={}) {
	return fetch(endpoint, {
		method: 'PUT',
		credentials: 'include',
		body: JSON.stringify(data),
		headers: {
			'Content-Type': 'application/json',
		}
	}).then(r => r.json());
}
export async function cachedImage(id, user, {...options}) {
	if (user && user.token) {
		let defaults = {
			width: 300,
			height: 300,
			square: 0
		}
		const params = { ...defaults, ...options }
		let cached, url, res, stringified;
		stringified = JSON.stringify(params).replace(/[\"\'\s]/g, '');

		cached = get(urls).has(id) && get(urls).get(id)[stringified] || false;
		// console.log(cached && 'cache found' || 'no cache found')
		if(!(url = cached)) {
			res = await uri(id, user, 'i', params);
			console.log('res', res)
			if (res) (url = res['url']) && urls.add(res);
		}
		return `${url}/?token=${user.token}`;
	}
}
export function getExt(fn) {
	let match = fn && fn.match(/[A-Za-z0-9]+$/) || [];
	return match.length && match[0].toLowerCase();
}
async function uri(id, user, type, {width, height, square}) {
	var query = `?width=${width}&height=${height}&square=${square}`;

	const result = await api.get(`u/${type}/${id}/${query}`, user && user.token);
	if (result.success) {
		return result.data;
	}
	return false;
}